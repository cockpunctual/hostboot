/* IBM_PROLOG_BEGIN_TAG                                                   */
/* This is an automatically generated prolog.                             */
/*                                                                        */
/* $Source: src/import/chips/ocmb/odyssey/procedures/hwp/utils/ody_apply_sbe_attribute_data.H $ */
/*                                                                        */
/* OpenPOWER HostBoot Project                                             */
/*                                                                        */
/* Contributors Listed Below - COPYRIGHT 2023                             */
/* [+] International Business Machines Corp.                              */
/*                                                                        */
/*                                                                        */
/* Licensed under the Apache License, Version 2.0 (the "License");        */
/* you may not use this file except in compliance with the License.       */
/* You may obtain a copy of the License at                                */
/*                                                                        */
/*     http://www.apache.org/licenses/LICENSE-2.0                         */
/*                                                                        */
/* Unless required by applicable law or agreed to in writing, software    */
/* distributed under the License is distributed on an "AS IS" BASIS,      */
/* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or        */
/* implied. See the License for the specific language governing           */
/* permissions and limitations under the License.                         */
/*                                                                        */
/* IBM_PROLOG_END_TAG                                                     */

/// @file ody_apply_sbe_attribute_data.H
/// @brief Parse the blob received from the SBE and update attributes
///
// *HWP HWP Owner: P Rajees <rajerpp1@in.ibm.com>
// *HWP HWP Backup: T Rajeswaran <rajeswgo@in.ibm.com>
// *HWP Team: SBE
// *HWP Consumed by: Cronus:HB

#ifndef _ODY_APPLY_SBE_ATTRIBUTE_DATA_
#define _ODY_APPLY_SBE_ATTRIBUTE_DATA_

#include "fapi2.H"
#include "sbe_attribute_utils.H"

// Required for Cronus
typedef fapi2::ReturnCode (*ody_apply_sbe_attribute_data_FP_t) (
    const fapi2::Target<fapi2::TARGET_TYPE_OCMB_CHIP>&, uint8_t*, uint16_t,
    std::vector<sbeutil::AttrError_t>&);

extern "C"
{
//
//  @brief Parse the blob received from the SBE Attribute List [AD-02] chip-op and update
//         attributes. The list of attributes are generated by a tool based on the attribute
//         XMLs. This function parse the blob to get the target type, instance number,
//         attribute id, and the attribute value and then call the generated code to update
//         the matching target type, instance number, and the attribute id.
//
//  @param[in]  i_ocmb_targ  The chip target corresponding to the target SBE
//
//  @param[in]  i_buf        The input buffer containing the blob
//
//  @param[in]  i_buf_size   The size of the input buffer
//                           The expected size of this buffer is ODY_APPLY_ATTR_DATA_SIZE.
//                           This macro will be updated by the tool that generates the
//                           attributes.
//
//  @param[out] o_errors     The output vector containing an entry for each error that
//                           occurred while trying to set an attribute with the value
//                           received from SBE.
//
//  @return FAPI2_RC_SUCCESS if ok
//
    fapi2::ReturnCode ody_apply_sbe_attribute_data(
        const fapi2::Target<fapi2::TARGET_TYPE_OCMB_CHIP>& i_ocmb_targ,
        uint8_t* i_buf,
        uint16_t i_buf_size,
        std::vector<sbeutil::AttrError_t>& o_errors);
}// extern C

#endif
