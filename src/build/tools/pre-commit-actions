#!/usr/bin/perl
# IBM_PROLOG_BEGIN_TAG
# This is an automatically generated prolog.
#
# $Source: src/build/tools/pre-commit-actions $
#
# OpenPOWER HostBoot Project
#
# Contributors Listed Below - COPYRIGHT 2015,2023
# [+] International Business Machines Corp.
#
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
# implied. See the License for the specific language governing
# permissions and limitations under the License.
#
# IBM_PROLOG_END_TAG

# This hook is used to add or update copyright prolog statements and run
# the code beautifier astyle.

use List::MoreUtils qw(first_index);

my $copyrightScript = "addCopyright";
my $xmlSortingScript = "applyTargetingStyle";

##  Make up a list of all staged files ( --cached --name-only )
##  Filter for only Added or Modified ( --diff-filter=AM )
chomp( my @fileList = `git diff --cached --name-only --diff-filter=AMR` );

if ( @fileList )
{
    print "run $copyrightScript update ...\n";
    print "        $_\n" foreach @fileList;
    print "\n";

    my $nproc = `nproc`;

    unless (defined $nproc)
    {
        # Some users will use MacOS (Unix) instead of Linux, which does not
        # have `nproc`. If that did not return a value, try the MacOS method.
        $nproc = `sysctl -n hw.logicalcpu`;
    }

    # Just in case the above commands fail for some reason. Otherwise, the
    # script will hang in an infinite loop.
    $nproc = 1 unless (defined $nproc);

    my @fileListCopy = @fileList;
    my @pids;

    # Spin off processes for each file, never going above $(nproc) processes
    while (@fileListCopy) {
        my $numpids = @pids;

        if ($numpids >= $nproc) {
            my $deadpid = wait();

            my $idx = first_index { $_ == $deadpid } @pids;

            if ($idx != -1) {
                delete(@pids[$idx]);
            }
        } else {
            my $file = pop(@fileListCopy);

            my $pid = fork();

            die("$?") if ($pid < 0);

            if ($pid == 0)
            {
                system "$ENV{'TOOLSDIR'}/$copyrightScript update $file";
                die("$?") if ($? != 0);
                exit(0);
            }

            push(@pids, ($pid));
        }
    }

    foreach (@pids) {
        waitpid($_, 0);
    }

    system "$ENV{'TOOLSDIR'}/$xmlSortingScript @fileList";
    die("$?") if ($? != 0);

    system "git add @fileList";
    exit 1 if ($? != 0);
}

exit 0;
